{
  "level_gen_program": "%%% Game played on an 8x6 grid\nsetting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n%%% Time bound: 30 steps\nsetting(time_bound(30)).\n\n%%% Player and flag are randomly placed (but not too close)\n1 { at(R,C,player) : setting(row(R)), setting(col(C)) } 1.\n1 { at(R,C,flag) : setting(row(R)), setting(col(C)) } 1.\ndistance(D) :- at(R1,C1,player), at(R2,C2,flag),\n    D = |R1-R2| + |C1-C2|.\n:- distance(D), D <= 3.\n%%% Randomize level generation\n#heuristic at(RANDINT(1,6),RANDINT(1,8),player). [10,true]\n#heuristic at(RANDINT(1,6),RANDINT(1,8),flag). [10,true]\n\ndecorate(game_type,grid).\n\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).",
  "visibility_program": "%%% 'Fog-of-war' is a ring of one around the player\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |C1-C2| >= 2.\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |R1-R2| >= 2.\nobserve(at(R,C,O)) :- at(R,C,O), not observe(fog(R,C)).",
  "player_move_program": "% Hints:\n% - once you see the flag, go towards it\n% - otherwise, follow a fixed path that ensures that you observe all cells eventually",
  "nature_program": "%%% Player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n%%% Move around\nnext(R,C,player) :- at(R,C,player), not do(move(_)).\nnext(R+1,C,player) :- at(R,C,player), do(move(down)), R < H, setting(grid_height(H)).\nnext(R,C,player) :- at(R,C,player), do(move(down)), setting(grid_height(R)).\nnext(R-1,C,player) :- at(R,C,player), do(move(up)), R > 1.\nnext(1,C,player) :- at(1,C,player), do(move(up)).\nnext(R,C+1,player) :- at(R,C,player), do(move(right)), C < W, setting(grid_width(W)).\nnext(R,C,player) :- at(R,C,player), do(move(right)), setting(grid_width(C)).\nnext(R,C-1,player) :- at(R,C,player), do(move(left)), C > 1.\nnext(R,1,player) :- at(R,1,player), do(move(left)).\n\n%%% Flag stays in place\nnext(R,C,flag) :- at(R,C,flag).",
  "goal_program": "%%% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n%%% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T >= S.",
  "level_state": "at(5,1,flag).\nat(1,4,player).",
  "level_settings": "setting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(time_bound(30)).\nsetting(row(1)).\nsetting(row(2)).\nsetting(row(3)).\nsetting(row(4)).\nsetting(row(5)).\nsetting(row(6)).\nsetting(col(1)).\nsetting(col(2)).\nsetting(col(3)).\nsetting(col(4)).\nsetting(col(5)).\nsetting(col(6)).\nsetting(col(7)).\nsetting(col(8)).\ndecorate(game_type,grid).\n\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007)."
}
