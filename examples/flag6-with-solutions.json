{
  "level_gen_program": "% The game is played on an 8x6 grid\nsetting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n% Time bound: 30 steps\nsetting(time_bound(30)).\n\n% The player is placed in the top-left cell\nat(1,1,player).\n% The flag is placed in cell (5,7)\nat(5,7,flag).\n\n% Ten to fifteen trees are placed at random,\n% not adjacent to each other,\n% and so that the flag is reachable for the player\n10 { at(R,C,tree) : setting(row(R)), setting(col(C)) } 15.\n:- at(R,C,player), at(R,C,tree).\n:- at(R,C,flag), at(R,C,tree).\nreachable(R,C) :- at(R,C,player).\ncell(R,C) :- setting(row(R)), setting(col(C)).\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2+1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2-1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2+1, C1 = C2.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2-1, C1 = C2.\nreachable(R1,C1) :- reachable(R2,C2), adjacent(R1,C1,R2,C2), not at(R1,C1,tree).\n:- cell(R,C), not at(R,C,tree), not reachable(R,C).\n:- adjacent(R1,C1,R2,C2), at(R1,C1,tree), at(R2,C2,tree).\n\n% Randomize level generation\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n\n% Visualization instructions\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).\ndecorate(label,tree,font_f1bb).",
  "visibility_program": "% Everything is observable\nobserve(at(R,C,O)) :- at(R,C,O).",
  "player_move_program": "% Make a plan once,\n% consisting of a path towards the flag\nreachable(R,C) :- observe(at(R,C,player)), not memory(made_plan).\nreachable(R',C') :- reachable(R,C), memory(go_to(R,C,R',C')).\n1 { remember(go_to(R,C,R',C')) :\n        adjacent(R,C,R',C'), not observe(at(R',C',tree)) } 1 :-\n    reachable(R,C), not observe(at(R,C,tree)),\n    not memory(made_plan).\n:- not reachable(R,C), observe(at(R,C,flag)), not memory(made_plan).\ncell(R,C) :- setting(row(R)), setting(col(C)).\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2+1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2-1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2+1, C1 = C2.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2-1, C1 = C2.\nmemory(go_to(R,C,R',C')) :- remember(go_to(R,C,R',C')).\nremember(made_plan).\n\n% Then follow the path\ndo(move(down)) :- observe(at(R,C,player)),\n    memory(go_to(R,C,R+1,C)).\ndo(move(up)) :- observe(at(R,C,player)),\n    memory(go_to(R,C,R-1,C)).\ndo(move(right)) :- observe(at(R,C,player)),\n    memory(go_to(R,C,R,C+1)).\ndo(move(left)) :- observe(at(R,C,player)),\n    memory(go_to(R,C,R,C-1)).",
  "nature_program": "% The player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n% Effect of move(up;down;left;right): the player moves in the appropriate direction\nnext(R,C,player) :- at(R,C,player), not do(move(_)).\nnext(R+1,C,player) :- at(R,C,player), do(move(down)), R < H, setting(grid_height(H)).\nnext(R,C,player) :- at(R,C,player), do(move(down)), setting(grid_height(R)).\nnext(R-1,C,player) :- at(R,C,player), do(move(up)), R > 1.\nnext(1,C,player) :- at(1,C,player), do(move(up)).\nnext(R,C+1,player) :- at(R,C,player), do(move(right)), C < W, setting(grid_width(W)).\nnext(R,C,player) :- at(R,C,player), do(move(right)), setting(grid_width(C)).\nnext(R,C-1,player) :- at(R,C,player), do(move(left)), C > 1.\nnext(R,1,player) :- at(R,1,player), do(move(left)).\n\n% The player can't pass through trees\n:- next(R,C,player), at(R,C,tree).\n\n% The flag and trees stay in place\nnext(R,C,flag) :- at(R,C,flag).\nnext(R,C,tree) :- at(R,C,tree).",
  "goal_program": "% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T > S.",
  "level_state": "at(1,1,player).\nat(5,7,flag).\nat(4,7,tree).\nat(2,4,tree).\nat(3,5,tree).\nat(1,2,tree).\nat(3,2,tree).\nat(4,1,tree).\nat(6,1,tree).\nat(5,3,tree).\nat(4,4,tree).\nat(1,5,tree).\nat(5,5,tree).\nat(2,7,tree).\nat(6,7,tree).\nat(3,8,tree).",
  "level_settings": "setting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(time_bound(30)).\nsetting(row(1)).\nsetting(row(2)).\nsetting(row(3)).\nsetting(row(4)).\nsetting(row(5)).\nsetting(row(6)).\nsetting(col(1)).\nsetting(col(2)).\nsetting(col(3)).\nsetting(col(4)).\nsetting(col(5)).\nsetting(col(6)).\nsetting(col(7)).\nsetting(col(8)).\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).\ndecorate(label,tree,font_f1bb)."
}
