{
  "level_gen_program": "%%% Game played on an 8x6 grid\n#const w=12.\n#const h=8.\n#const n=w*h.\nsetting(grid_width(w)).\nsetting(grid_height(h)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n%%% Time bound: 80 steps\nsetting(time_bound(80)).\n\n%%% Player is placed in top-left cell\n1 { at(R,C,player) : cell(R,C) } 1.\n%%% Flag is randomly placed in the bottom half\n1 { at(R,C,flag) : cell(R,C) } 1.\n%%% Player and flag are not too close\ndistance(D) :- at(R1,C1,player), at(R2,C2,flag),\n    D = |R1-R2| + |C1-C2|.\n:- distance(D), D <= 3.\n\n%%% Trees are placed at random\nn/4 { at(R,C,tree) : setting(row(R)), setting(col(C)) } n/4.\n:- at(R,C,player), at(R,C,tree).\n:- at(R,C,flag), at(R,C,tree).\nreachable(R,C) :- at(R,C,player).\ncell(R,C) :- setting(row(R)), setting(col(C)).\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2+1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2, C1 = C2-1.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2+1, C1 = C2.\nadjacent(R1,C1,R2,C2) :- cell(R1,C1), cell(R2,C2), R1 = R2-1, C1 = C2.\nreachable(R1,C1) :- reachable(R2,C2), adjacent(R1,C1,R2,C2), not at(R1,C1,tree).\n:- cell(R,C), not at(R,C,tree), not reachable(R,C).\n:- adjacent(R1,C1,R2,C2), at(R1,C1,tree), at(R2,C2,tree).\n\n%%% Randomize level generation\n#heuristic at(RANDINT(1,8),RANDINT(1,12),player). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),flag). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n#heuristic at(RANDINT(1,8),RANDINT(1,12),tree). [10,true]\n\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).\ndecorate(label,tree,font_f1bb).",
  "visibility_program": "%%% 'Fog-of-war' is a ring of one around the player\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |C1-C2| >= 2.\nobserve(fog(R1,C1)) :-\n    setting(row(R1)), setting(col(C1)),\n    at(R2,C2,player), |R1-R2| >= 2.\nobserve(at(R,C,O)) :- at(R,C,O), not observe(fog(R,C)).",
  "player_move_program": "% Hints:\n% - remember the contents of the cells that you have seen, building up a mental map\n% - once your mental map has a path to the flag, follow it\n% - otherwise, explore to build up your mental map",
  "nature_program": "%%% Player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n%%% Move around\nnext(R,C,player) :- at(R,C,player), not do(move(_)).\nnext(R+1,C,player) :- at(R,C,player), do(move(down)), R < H, setting(grid_height(H)).\nnext(R,C,player) :- at(R,C,player), do(move(down)), setting(grid_height(R)).\nnext(R-1,C,player) :- at(R,C,player), do(move(up)), R > 1.\nnext(1,C,player) :- at(1,C,player), do(move(up)).\nnext(R,C+1,player) :- at(R,C,player), do(move(right)), C < W, setting(grid_width(W)).\nnext(R,C,player) :- at(R,C,player), do(move(right)), setting(grid_width(C)).\nnext(R,C-1,player) :- at(R,C,player), do(move(left)), C > 1.\nnext(R,1,player) :- at(R,1,player), do(move(left)).\n\n%%% Can't run through trees\n:- next(R,C,player), at(R,C,tree).\n\n%%% Flag and trees stays in place\nnext(R,C,flag) :- at(R,C,flag).\nnext(R,C,tree) :- at(R,C,tree).",
  "goal_program": "%%% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n\n%%% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T >= S.",
  "level_state": "at(7,5,tree). at(5,9,tree). at(6,8,tree). at(3,5,tree). at(5,4,tree). at(7,11,tree). at(2,9,tree). at(1,6,flag). at(6,1,player). at(1,2,tree). at(3,2,tree). at(4,1,tree). at(7,2,tree). at(4,3,tree). at(6,3,tree). at(2,4,tree). at(5,6,tree). at(2,7,tree). at(4,7,tree). at(7,7,tree). at(3,8,tree). at(7,9,tree). at(4,10,tree). at(1,11,tree). at(3,11,tree). at(5,11,tree).",
  "level_settings": "setting(grid_width(12)). setting(grid_height(8)). setting(time_bound(80)). setting(row(1)). setting(row(2)). setting(row(3)). setting(row(4)). setting(row(5)). setting(row(6)). setting(row(7)). setting(row(8)). setting(col(1)). setting(col(2)). setting(col(3)). setting(col(4)). setting(col(5)). setting(col(6)). setting(col(7)). setting(col(8)). setting(col(9)). setting(col(10)). setting(col(11)). setting(col(12)). decorate(game_type,grid). decorate(label,flag,font_f024). decorate(label,player,font_f007). decorate(label,tree,font_f1bb)."
}
