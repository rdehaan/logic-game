{
  "level_gen_program": "%%% Game played on an 8x6 grid\nsetting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n%%% Time bound: 15 steps\nsetting(time_bound(15)).\n\n%%% Player is placed in top-left cell\nat(1,1,player).\n%%% Flag is randomly placed in the bottom half\nat(5,7,flag).\n\n%%% Three trees are placed at random\n3 { at(R,C,tree) : setting(row(R)), setting(col(C)) } 3.\n:- at(R,C,player), at(R,C,tree).\n:- at(R,C,flag), at(R,C,tree).\n:- at(R1,C1,tree), at(R2,C2,tree), (R1,C1) != (R2,C2),\n  |R1-R2|+|C1-C2| <= 2.\n\n%%% Randomize level generation\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n#heuristic at(RANDINT(1,6),RANDINT(1,8),tree). [10,true]\n\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).\ndecorate(label,tree,font_f1bb).",
  "visibility_program": "%%% Everything is observable\nobserve(at(R,C,O)) :- at(R,C,O).",
  "player_move_program": "",
  "nature_program": "%%% Player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n%%% Move around\nnext(R,C,player) :- at(R,C,player), not do(move(_)).\nnext(R+1,C,player) :- at(R,C,player), do(move(down)), R < H, setting(grid_height(H)).\nnext(R,C,player) :- at(R,C,player), do(move(down)), setting(grid_height(R)).\nnext(R-1,C,player) :- at(R,C,player), do(move(up)), R > 1.\nnext(1,C,player) :- at(1,C,player), do(move(up)).\nnext(R,C+1,player) :- at(R,C,player), do(move(right)), C < W, setting(grid_width(W)).\nnext(R,C,player) :- at(R,C,player), do(move(right)), setting(grid_width(C)).\nnext(R,C-1,player) :- at(R,C,player), do(move(left)), C > 1.\nnext(R,1,player) :- at(R,1,player), do(move(left)).\n\n%%% Can't run through trees\n:- next(R,C,player), at(R,C,tree).\n\n%%% Flag and trees stays in place\nnext(R,C,flag) :- at(R,C,flag).\nnext(R,C,tree) :- at(R,C,tree).",
  "goal_program": "%%% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n\n%%% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T >= S.",
  "level_state": "at(1,1,player). at(5,7,flag). at(5,6,tree). at(2,2,tree). at(6,8,tree).",
  "level_settings": "setting(grid_width(8)). setting(grid_height(6)). setting(time_bound(15)). setting(row(1)). setting(row(2)). setting(row(3)). setting(row(4)). setting(row(5)). setting(row(6)). setting(col(1)). setting(col(2)). setting(col(3)). setting(col(4)). setting(col(5)). setting(col(6)). setting(col(7)). setting(col(8)). decorate(game_type,grid). decorate(label,flag,font_f024). decorate(label,player,font_f007). decorate(label,tree,font_f1bb)."
}
