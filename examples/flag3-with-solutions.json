{
  "aux_program": "% Predicates for (adjacent) cells\ncell(R,C) :- setting(row(R)), setting(col(C)).\ndirection(left;right;up;down).\nmovement(R,C,R,C+1,right) :- cell(R,C), cell(R,C+1).\nmovement(R,C,R,C-1,left) :- cell(R,C), cell(R,C-1).\nmovement(R,C,R+1,C,down) :- cell(R,C), cell(R+1,C).\nmovement(R,C,R-1,C,up) :- cell(R,C), cell(R-1,C).\nadjacent(R1,C1,R2,C2) :- direction(D), movement(R1,C1,R2,C2,D).",
  "level_gen_program": "% The game is played on an 8x6 grid\nsetting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(row(1..H)) :- setting(grid_height(H)).\nsetting(col(1..W)) :- setting(grid_width(W)).\n\n% Time bound: 15 steps\nsetting(time_bound(15)).\n\n% The player is randomly placed in the top half\nat(RANDINT(1,3),RANDINT(1,8),player).\n% The flag is randomly placed in the bottom half\nat(RANDINT(4,6),RANDINT(1,8),flag).\n\n% Visualization instructions\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007).",
  "visibility_program": "% Everything is observable\nobserve(at(R,C,O)) :- at(R,C,O).",
  "player_move_program": "% Move down if you're above the flag\ndo(move(down)) :- observe(at(R1,C1,player)), observe(at(R2,C2,flag)), R1 < R2.\n% Move up if you're below the flag\ndo(move(up)) :- observe(at(R1,C1,player)), observe(at(R2,C2,flag)), R1 > R2.\n% Move right if you're left of the flag (and at the same height)\ndo(move(right)) :- observe(at(R,C1,player)), observe(at(R,C2,flag)), C1 < C2.\n% Move left if you're right of the flag (and at the same height)\ndo(move(left)) :- observe(at(R,C1,player)), observe(at(R,C2,flag)), C1 > C2.",
  "nature_program": "% The player can do at most one action per time step\n:- do(X), do(Y), X != Y.\n\n% Effect of move(up;down;left;right): the player moves in the appropriate direction\nmove_result(R2,C2) :- do(move(D)), direction(D),\n    at(R1,C1,player), movement(R1,C1,R2,C2,D).\nnext(R,C,player) :- move_result(R,C).\nnext(R,C,player) :- at(R,C,player), not move_result(R',C') : cell(R',C').\n\n% The flag stays in place\nnext(R,C,flag) :- at(R,C,flag).",
  "goal_program": "% Goal: reach the flag\nwin :- at(R,C,player), at(R,C,flag).\n\n% You lose if time runs out..\nlose(timeout) :- current_time(T), setting(time_bound(S)), T >= S.",
  "level_state": "at(2,8,player).\nat(4,4,flag).",
  "level_settings": "setting(grid_width(8)).\nsetting(grid_height(6)).\nsetting(time_bound(15)).\nsetting(col(1)).\nsetting(col(2)).\nsetting(col(3)).\nsetting(col(4)).\nsetting(col(5)).\nsetting(col(6)).\nsetting(col(7)).\nsetting(col(8)).\nsetting(row(1)).\nsetting(row(2)).\nsetting(row(3)).\nsetting(row(4)).\nsetting(row(5)).\nsetting(row(6)).\ndecorate(game_type,grid).\ndecorate(label,flag,font_f024).\ndecorate(label,player,font_f007)."
}
